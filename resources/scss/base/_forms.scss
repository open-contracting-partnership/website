@use "sass:math";

fieldset,
form {
	border: 0;
	padding: 0;
	margin: 0;
}

label,
legend {
	font-size: 13px;
	text-transform: uppercase;

	display: block;
	margin-bottom: 0;

	cursor: pointer;
}

abbr[title="Required"] {
	@include font('primary', 'bold');
	color: $ui-black;
}

input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="url"],
input[type="number"],
input[type="tel"],
input[type="color"],
input[type="range"],
input[type="time"],
input[type="date"],
input[type="month"],
input[type="week"],
input[type="datetime"],
input[type="datetime-local"],
textarea {
	@include font('primary', 'regular');
	font-size: 14px;
	color: $ui-black;
	background-color: $ui-white;

	width: 100%;
	border: 1px solid $ui-black;
	border-radius: $border-radius;
	padding: .5rem 1rem;
	margin-bottom: math.div($space, 2);

	&:focus {
		box-shadow: none;
		outline: none;
	}

	@include mq(M) {
	    padding: em(16, 14) em(12, 14);
	}
}

input[type="color"] {
	width: 1em;
}

textarea {
	line-height: 1.5;
}

// input[type="text"].valid,
// input[type="email"].valid {
// }
//
// input[type="text"].not-valid,
// input[type="email"].not-valid {
// }


 //*******************
// PLACEHOLDER STYLES

::-webkit-input-placeholder {
   color: $ui-grey;
}

:-moz-placeholder { /* Firefox 18- */
 	color: $ui-grey;
}

::-moz-placeholder {  /* Firefox 19+ */
   color: $ui-grey;
}

:-ms-input-placeholder {
   color: $ui-grey;
}

.filter-menu {
	padding: 17px;
	margin-bottom: 48px;
	background-color: $ui-grey-8;
	border-radius: 22px 6px;

	a {
		font-size: 14px;
		font-weight: 500;
	}
}

	.filter-header {
		display: flex;
		justify-content: space-between;
        align-items: flex-start;
        margin-bottom: spacing(.5);

		p {
			font-weight: 500;
			font-size: 14px;
		}
	}

	.filter-container {
		display: flex;
		flex-wrap: wrap;
		gap: 10px;
    }

	    .filter-item__input {
		    @extend .visually-hidden;
		}

        .filter-item__control {
            --padding-inline: #{em(6, 14)};

            --colour: #{$ui-black};
            --text-colour: var(--colour, #{$ui-black});
            --background-colour: #{$ui-white};
            --contrast-colour: #{$ui-white};

            padding-top: calc(2px + var(--padding-inline));
            padding-bottom: var(--padding-inline);
            padding-inline: em(12, 14);

            border-radius: 20px;
            background-color: var(--background-colour);
            color: var(--text-colour);
            border: 1px solid var(--colour);
            cursor: pointer;
            transition: background-color 0.3s ease, color 0.3s ease;
            font-size: 14px;
            font-weight: 500;
            text-transform: initial;
            user-select: none;
            @include font('secondary', 'medium');

            &:hover {
                color: var(--contrast-colour);
                background-color: var(--colour);
            }

			&[data-colour="green"] {
                --colour: #{$ui-brand};
                --text-colour: #{$ui-black};
                --contrast-colour: #{$ui-black};
			}

			&[data-colour="orange"] {
                --colour: #{$ui-orange};
			}

			&[data-colour="blue"] {
                --colour: #{$ui-blue};
			}

			&[data-colour="black"] {
                --colour: #{$ui-black};
			}
        }

		.filter-item__input:checked ~ .filter-item__control {
            color: var(--contrast-colour);
            background-color: var(--colour);
		}

    .filter__reset-link {
        font-size: 14px;
        text-decoration: underline;
        width: max-content;
        font-weight: 500;
    }

.search-input {
	font-size: 14px;
	color: $ui-grey-4;

	height: em(23, 14);
	border: 0.5px solid currentColor;
	border-radius: 2px 999px 999px 2px;
	display: flex;

	.search-input__input {

		font-size: 1em;
		flex: 1 1 100%;
		@include font('secondary', 'bold');
		border: none;
		background: none;
		border-radius: 0;
		color: currentColor;
		padding: 4px 34px 4px 7px;
		margin: 0;
		min-width: 0;

		&::-webkit-input-placeholder {
			@include font('secondary', 'bold');
			color: currentColor;
			opacity: 1;
		}

		&:-moz-placeholder { /* Firefox 18- */
			@include font('secondary', 'bold');
			color: currentColor;
			opacity: 1;
		}

		&::-moz-placeholder {  /* Firefox 19+ */
			@include font('secondary', 'bold');
			color: currentColor;
			opacity: 1;
		}

		&:-ms-input-placeholder {
			@include font('secondary', 'bold');
			color: currentColor;
			opacity: 1;
		}

	}

	.search-input__button {

		flex: 0 0 auto;
		margin-right: 1px;

		> svg {
			display: block;
			font-size: em(14, 11);
			height: 1em;
			width: 1em;
			fill: currentColor;
		}

	}

	// sizes

	&[data-size="large"] {

		font-size: 18px;

		.search-input__input {
			font-size: .7em;
		}

		.search-input__button {
			margin-right: 2px;
		}

	}

	// colours

	&[data-colour="light"] {
		color: $ui-grey-5;
	}

}

.select-dropdown {
    --accent-colour: #{$ui-grey-4};

    position: relative;

    &:hover {
        --accent-colour: #{$ui-black};
    }

    &__input {
        appearance: none;
        display: inline-block;
        width: 100%;
        padding: 0.6em 0.9em 0.5em;
        border: 1px solid var(--accent-colour);
        transition: border-color 0.3s ease;
        background: #fff;
        color: $ui-black;
        font-size: 14px;
        @include font('secondary', 'medium');
    }

    &__icon {
        --size: 16px;

        position: absolute;
        right: spacing(1.5);
        top: 50%;
        transform: translateY(-50%);
        width: var(--size);
        height: var(--size);
        fill: var(--accent-colour);
        transition: fill 0.3s ease;
        pointer-events: none;

        svg {
            display: block;
        }
    }
}

.input-circle {

	--colour: #{$ui-grey-4};

	appearance: none;
	font-size: 21px;
	border: 3px solid var(--colour);
	background-color: $ui-white;
	width: 1em;
	height: 1em;
	cursor: pointer;
	user-select: none;
	border-radius: 50%;
	margin: 0;
	padding: 0;
	transition: background-color .3s ease;

	color-adjust: exact !important;
	-webkit-print-color-adjust: exact !important;
	print-color-adjust: exact !important;

	&:checked,
	&.checked {

		background-color: var(--colour);

		@media print {
			background-color: var(--colour) !important;
		}

	}

	&[data-colour="blue"] {
		--colour: #{$ui-blue};
	}

	&[data-colour="orange"] {
		--colour: #{$ui-orange};
	}

	&[data-colour="teal"] {
		--colour: #{$ui-teal};
	}

	&[data-colour="green"] {
		--colour: #{$ui-brand};
	}

	&[data-colour="light-green"] {
		--colour: #{$ui-brand-2};
	}

}
