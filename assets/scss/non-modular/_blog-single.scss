.single-post {

	.blog__title {
		padding-top: 7.5rem;
		position: relative;

		@include mq(M) {
			@include span(8 at 4 of 12 last);
		}

		@include mq(L) {
			@include span(6 at 4 of 12 last);
			margin-right: span(2 of 12) + gutter();
		}

		&:before {
			content: '';
			position: absolute;
			top: 0;
			left: -100vw;
			bottom: 0;
			width: 200vw;
			z-index: -1;
			background-color: color('brand-dark');
		}
	}

	.post-type {
		@include font('secondary', 'bold');
		@include font-size(14);
		text-transform: uppercase;
		letter-spacing: 1px;
		color: color('white');
		border: 1px solid;
		margin-bottom: .75em;
		padding: .35714em .57143em;
		display: inline-block;
	}

	h1 {

		color: color('white');
		padding-bottom: 1.4em;

		@include mq(M) {
			padding-bottom: 0;
		}

	}

	article {
		margin-bottom: 6em;

		> section {

			@include mq(M) {

				@include span(8 of 12 last);
				margin-top: 2em;

				article.post--has-thumbnail & {
					margin-top: -2rem;
				}

			}

			@include mq(L) {
				@include span(6 at 4 of 12 last);
				margin-right: span(2 of 12) + gutter();
			}

			> img {
				margin-bottom: 2.2em;
				background-color: color('white');
			}

		}

		aside {

			@include mq(M) {
				@include span(4 of 12 first);
			}

			@include mq(L) {
				@include span(3 of 12 first);
			}

		}

	}

	.related-posts {
		@include break;
	}

}

.blog__mobile-date {

	@include mq(M) {
		display: none;
	}

}


 //**************
// RELATED POSTS

.related-posts {

	border-top: 1px solid color('lighter-grey');

	h2 {
		text-transform: uppercase;
		margin: em(55) 0;
		text-align: center;
	}

}

.yarpp-related {

	display: flex;
	flex-wrap: wrap;

	margin-bottom: em(108);

	.post-object {

		@include mq(M) {

			@include span(6 of 12);

			&:nth-of-type(2n) {
				@include last;
			}

			&:nth-of-type(2n+1) {
				@include break;
			}

		}

		@include mq(L) {

			@include span(4 of 12);

			&:nth-of-type(2n) {
				@include span(4 of 12);
			}

			&:nth-of-type(2n+1) {
				@include nobreak;
			}

			&:nth-of-type(3n) {
				@include last;
			}

			&:nth-of-type(3n+1) {
				@include break;
			}

		}

	}

}
